/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISilo,
  ISiloInterface,
} from "../../../../../../src/plugins/position/implementations/BeanstalkSilo.sol/ISilo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "enum LibTransfer.From",
        name: "mode",
        type: "uint8",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bdv",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "stem",
        type: "int96",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ISilo__factory {
  static readonly abi = _abi;
  static createInterface(): ISiloInterface {
    return new Interface(_abi) as ISiloInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ISilo {
    return new Contract(address, _abi, runner) as unknown as ISilo;
  }
}
