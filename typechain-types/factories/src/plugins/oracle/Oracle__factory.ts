/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Oracle,
  OracleInterface,
} from "../../../../src/plugins/oracle/Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
    ],
    name: "getClosePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
    ],
    name: "getOpenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class Oracle__factory {
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new Interface(_abi) as OracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Oracle {
    return new Contract(address, _abi, runner) as unknown as Oracle;
  }
}
