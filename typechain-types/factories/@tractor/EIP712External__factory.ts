/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EIP712External,
  EIP712ExternalInterface,
} from "../../@tractor/EIP712External";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignatureNow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162000ef938038062000ef98339818101604052810190620000389190620002c3565b818160008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250504660a08181525050620000a3818484620000f460201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508061012081815250505050505050505062000420565b6000838383463060405160200162000111959493929190620003c3565b6040516020818303038152906040528051906020012090509392505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000199826200014e565b810181811067ffffffffffffffff82111715620001bb57620001ba6200015f565b5b80604052505050565b6000620001d062000130565b9050620001de82826200018e565b919050565b600067ffffffffffffffff8211156200020157620002006200015f565b5b6200020c826200014e565b9050602081019050919050565b60005b83811015620002395780820151818401526020810190506200021c565b60008484015250505050565b60006200025c6200025684620001e3565b620001c4565b9050828152602081018484840111156200027b576200027a62000149565b5b6200028884828562000219565b509392505050565b600082601f830112620002a857620002a762000144565b5b8151620002ba84826020860162000245565b91505092915050565b60008060408385031215620002dd57620002dc6200013a565b5b600083015167ffffffffffffffff811115620002fe57620002fd6200013f565b5b6200030c8582860162000290565b925050602083015167ffffffffffffffff81111562000330576200032f6200013f565b5b6200033e8582860162000290565b9150509250929050565b6000819050919050565b6200035d8162000348565b82525050565b6000819050919050565b620003788162000363565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ab826200037e565b9050919050565b620003bd816200039e565b82525050565b600060a082019050620003da600083018862000352565b620003e9602083018762000352565b620003f8604083018662000352565b6200040760608301856200036d565b620004166080830184620003b2565b9695505050505050565b60805160a05160c05160e0516101005161012051610a896200047060003960006103530152600061039501526000610374015260006102a9015260006102ff015260006103280152610a896000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633408e470146100465780636ccea65214610064578063f698da2514610094575b600080fd5b61004e6100b2565b60405161005b9190610545565b60405180910390f35b61007e6004803603810190610079919061074e565b6100ba565b60405161008b91906107d8565b60405180910390f35b61009c6100d0565b6040516100a99190610802565b60405180910390f35b600046905090565b60006100c78484846100df565b90509392505050565b60006100da6102a5565b905090565b60008060006100ee85856103bf565b91509150600060048111156101065761010561081d565b5b8160048111156101195761011861081d565b5b14801561015157508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b156101615760019250505061029e565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b88886040516024016101969291906108cb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102009190610937565b600060405180830381855afa9150503d806000811461023b576040519150601f19603f3d011682016040523d82523d6000602084013e610240565b606091505b5091509150818015610253575060208151145b80156102975750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906102959190610963565b145b9450505050505b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561032157507f000000000000000000000000000000000000000000000000000000000000000046145b1561034e577f000000000000000000000000000000000000000000000000000000000000000090506103bc565b6103b97f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610410565b90505b90565b60008060418351036104005760008060006020860151925060408601519150606086015160001a90506103f48782858561044a565b94509450505050610409565b60006002915091505b9250929050565b6000838383463060405160200161042b95949392919061099f565b6040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610485576000600391509150610523565b6000600187878787604051600081526020016040526040516104aa9493929190610a0e565b6020604051602081039080840390855afa1580156104cc573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361051a57600060019250925050610523565b80600092509250505b94509492505050565b6000819050919050565b61053f8161052c565b82525050565b600060208201905061055a6000830184610536565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059f82610574565b9050919050565b6105af81610594565b81146105ba57600080fd5b50565b6000813590506105cc816105a6565b92915050565b6000819050919050565b6105e5816105d2565b81146105f057600080fd5b50565b600081359050610602816105dc565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61065b82610612565b810181811067ffffffffffffffff8211171561067a57610679610623565b5b80604052505050565b600061068d610560565b90506106998282610652565b919050565b600067ffffffffffffffff8211156106b9576106b8610623565b5b6106c282610612565b9050602081019050919050565b82818337600083830152505050565b60006106f16106ec8461069e565b610683565b90508281526020810184848401111561070d5761070c61060d565b5b6107188482856106cf565b509392505050565b600082601f83011261073557610734610608565b5b81356107458482602086016106de565b91505092915050565b6000806000606084860312156107675761076661056a565b5b6000610775868287016105bd565b9350506020610786868287016105f3565b925050604084013567ffffffffffffffff8111156107a7576107a661056f565b5b6107b386828701610720565b9150509250925092565b60008115159050919050565b6107d2816107bd565b82525050565b60006020820190506107ed60008301846107c9565b92915050565b6107fc816105d2565b82525050565b600060208201905061081760008301846107f3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b8381101561088657808201518184015260208101905061086b565b60008484015250505050565b600061089d8261084c565b6108a78185610857565b93506108b7818560208601610868565b6108c081610612565b840191505092915050565b60006040820190506108e060008301856107f3565b81810360208301526108f28184610892565b90509392505050565b600081905092915050565b60006109118261084c565b61091b81856108fb565b935061092b818560208601610868565b80840191505092915050565b60006109438284610906565b915081905092915050565b60008151905061095d816105dc565b92915050565b6000602082840312156109795761097861056a565b5b60006109878482850161094e565b91505092915050565b61099981610594565b82525050565b600060a0820190506109b460008301886107f3565b6109c160208301876107f3565b6109ce60408301866107f3565b6109db6060830185610536565b6109e86080830184610990565b9695505050505050565b600060ff82169050919050565b610a08816109f2565b82525050565b6000608082019050610a2360008301876107f3565b610a3060208301866109ff565b610a3d60408301856107f3565b610a4a60608301846107f3565b9594505050505056fea2646970667358221220dbe8961da9297ffa67cf18baf38bd1c38d5e4ef29d969c420aeeb4a309854fae64736f6c63430008130033";

type EIP712ExternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712ExternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712External__factory extends ContractFactory {
  constructor(...args: EIP712ExternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    version: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override deploy(
    name: string,
    version: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, version, overrides || {}) as Promise<
      EIP712External & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EIP712External__factory {
    return super.connect(runner) as EIP712External__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712ExternalInterface {
    return new Interface(_abi) as EIP712ExternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EIP712External {
    return new Contract(address, _abi, runner) as unknown as EIP712External;
  }
}
