/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IInstantaneousPump,
  IInstantaneousPumpInterface,
} from "../../../lib/Beanstalk/IInstantaneousPump";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "well",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "readInstantaneousReserves",
    outputs: [
      {
        internalType: "uint256[]",
        name: "reserves",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IInstantaneousPump__factory {
  static readonly abi = _abi;
  static createInterface(): IInstantaneousPumpInterface {
    return new Interface(_abi) as IInstantaneousPumpInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IInstantaneousPump {
    return new Contract(address, _abi, runner) as unknown as IInstantaneousPump;
  }
}
