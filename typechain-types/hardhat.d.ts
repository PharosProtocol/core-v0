/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "EIP712External",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712External__factory>;
    getContractFactory(
      name: "ITractor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITractor__factory>;
    getContractFactory(
      name: "Tractor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tractor__factory>;
    getContractFactory(
      name: "IBean",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBean__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IInstantaneousPump",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInstantaneousPump__factory>;
    getContractFactory(
      name: "IWell",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWell__factory>;
    getContractFactory(
      name: "LibBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibBalance__factory>;
    getContractFactory(
      name: "Bookkeeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bookkeeper__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "IAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccount__factory>;
    getContractFactory(
      name: "IAssessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssessor__factory>;
    getContractFactory(
      name: "IBookkeeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBookkeeper__factory>;
    getContractFactory(
      name: "ILiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidator__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IPosition",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPosition__factory>;
    getContractFactory(
      name: "Account",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Account__factory>;
    getContractFactory(
      name: "SoloAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SoloAccount__factory>;
    getContractFactory(
      name: "Assessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Assessor__factory>;
    getContractFactory(
      name: "StandardAssessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardAssessor__factory>;
    getContractFactory(
      name: "CloneFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CloneFactory__factory>;
    getContractFactory(
      name: "Liquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Liquidator__factory>;
    getContractFactory(
      name: "BeanOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeanOracle__factory>;
    getContractFactory(
      name: "ChainlinkOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkOracle__factory>;
    getContractFactory(
      name: "StaticOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticOracle__factory>;
    getContractFactory(
      name: "Oracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Oracle__factory>;
    getContractFactory(
      name: "BeanstalkSiloFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeanstalkSiloFactory__factory>;
    getContractFactory(
      name: "ISilo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISilo__factory>;
    getContractFactory(
      name: "WalletFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WalletFactory__factory>;
    getContractFactory(
      name: "Position",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Position__factory>;

    getContractAt(
      name: "AggregatorV3Interface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "EIP712External",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712External>;
    getContractAt(
      name: "ITractor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITractor>;
    getContractAt(
      name: "Tractor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Tractor>;
    getContractAt(
      name: "IBean",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBean>;
    getContractAt(
      name: "IDiamondCut",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IInstantaneousPump",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInstantaneousPump>;
    getContractAt(
      name: "IWell",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWell>;
    getContractAt(
      name: "LibBalance",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibBalance>;
    getContractAt(
      name: "Bookkeeper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Bookkeeper>;
    getContractAt(
      name: "IWETH9",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH9>;
    getContractAt(
      name: "IAccount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccount>;
    getContractAt(
      name: "IAssessor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssessor>;
    getContractAt(
      name: "IBookkeeper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBookkeeper>;
    getContractAt(
      name: "ILiquidator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidator>;
    getContractAt(
      name: "IOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "IPosition",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPosition>;
    getContractAt(
      name: "Account",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Account>;
    getContractAt(
      name: "SoloAccount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SoloAccount>;
    getContractAt(
      name: "Assessor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Assessor>;
    getContractAt(
      name: "StandardAssessor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StandardAssessor>;
    getContractAt(
      name: "CloneFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CloneFactory>;
    getContractAt(
      name: "Liquidator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Liquidator>;
    getContractAt(
      name: "BeanOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BeanOracle>;
    getContractAt(
      name: "ChainlinkOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkOracle>;
    getContractAt(
      name: "StaticOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StaticOracle>;
    getContractAt(
      name: "Oracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Oracle>;
    getContractAt(
      name: "BeanstalkSiloFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BeanstalkSiloFactory>;
    getContractAt(
      name: "ISilo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISilo>;
    getContractAt(
      name: "WalletFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WalletFactory>;
    getContractAt(
      name: "Position",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Position>;

    deployContract(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorV3Interface>;
    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "EIP712External",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712External>;
    deployContract(
      name: "ITractor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITractor>;
    deployContract(
      name: "Tractor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Tractor>;
    deployContract(
      name: "IBean",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBean>;
    deployContract(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IInstantaneousPump",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInstantaneousPump>;
    deployContract(
      name: "IWell",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWell>;
    deployContract(
      name: "LibBalance",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibBalance>;
    deployContract(
      name: "Bookkeeper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Bookkeeper>;
    deployContract(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH9>;
    deployContract(
      name: "IAccount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccount>;
    deployContract(
      name: "IAssessor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAssessor>;
    deployContract(
      name: "IBookkeeper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBookkeeper>;
    deployContract(
      name: "ILiquidator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILiquidator>;
    deployContract(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOracle>;
    deployContract(
      name: "IPosition",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPosition>;
    deployContract(
      name: "Account",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Account>;
    deployContract(
      name: "SoloAccount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SoloAccount>;
    deployContract(
      name: "Assessor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Assessor>;
    deployContract(
      name: "StandardAssessor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StandardAssessor>;
    deployContract(
      name: "CloneFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CloneFactory>;
    deployContract(
      name: "Liquidator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Liquidator>;
    deployContract(
      name: "BeanOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BeanOracle>;
    deployContract(
      name: "ChainlinkOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkOracle>;
    deployContract(
      name: "StaticOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StaticOracle>;
    deployContract(
      name: "Oracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Oracle>;
    deployContract(
      name: "BeanstalkSiloFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BeanstalkSiloFactory>;
    deployContract(
      name: "ISilo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISilo>;
    deployContract(
      name: "WalletFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WalletFactory>;
    deployContract(
      name: "Position",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Position>;

    deployContract(
      name: "AggregatorV3Interface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorV3Interface>;
    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "EIP712External",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712External>;
    deployContract(
      name: "ITractor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITractor>;
    deployContract(
      name: "Tractor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Tractor>;
    deployContract(
      name: "IBean",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBean>;
    deployContract(
      name: "IDiamondCut",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IInstantaneousPump",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInstantaneousPump>;
    deployContract(
      name: "IWell",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWell>;
    deployContract(
      name: "LibBalance",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibBalance>;
    deployContract(
      name: "Bookkeeper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Bookkeeper>;
    deployContract(
      name: "IWETH9",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH9>;
    deployContract(
      name: "IAccount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccount>;
    deployContract(
      name: "IAssessor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAssessor>;
    deployContract(
      name: "IBookkeeper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBookkeeper>;
    deployContract(
      name: "ILiquidator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILiquidator>;
    deployContract(
      name: "IOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOracle>;
    deployContract(
      name: "IPosition",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPosition>;
    deployContract(
      name: "Account",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Account>;
    deployContract(
      name: "SoloAccount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SoloAccount>;
    deployContract(
      name: "Assessor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Assessor>;
    deployContract(
      name: "StandardAssessor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StandardAssessor>;
    deployContract(
      name: "CloneFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CloneFactory>;
    deployContract(
      name: "Liquidator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Liquidator>;
    deployContract(
      name: "BeanOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BeanOracle>;
    deployContract(
      name: "ChainlinkOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkOracle>;
    deployContract(
      name: "StaticOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StaticOracle>;
    deployContract(
      name: "Oracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Oracle>;
    deployContract(
      name: "BeanstalkSiloFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BeanstalkSiloFactory>;
    deployContract(
      name: "ISilo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISilo>;
    deployContract(
      name: "WalletFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WalletFactory>;
    deployContract(
      name: "Position",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Position>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
